<link href="~/Content/_Grid.css" rel="stylesheet" />
@using GridMvc.Columns
@model GridMvc.IGrid
@if (Model == null) { return; }
@if (Model.RenderOptions.RenderRowsOnly)
{
    @RenderGridBody();
}
else
{
    <div class="grid-mvc"  data-gridname="@Model.RenderOptions.GridName">
        <div class="gir_style">
                <table table id="book_grid" class="table  dt-responsive" cellspacing="0" width="100%">
                    <thead class="thead-inverse header">
                        @RenderGridHeader()
                    </thead>
                    <tbody class="table_body_color">
                        @RenderGridBody()
                    </tbody>
                </table>
            
            @RenderGridPager()
        </div>
    </div>
}
@helper RenderGridBody()
{
    if (!Model.ItemsToDisplay.Any())
    {
    <tr class="grid-empty-text">
        <td colspan="@Model.Columns.Count()">
            @Model.EmptyGridText
        </td>
    </tr>
    }
    else
    {
        foreach (object item in Model.ItemsToDisplay)
        {
    <tr class="grid-row @Model.GetRowCssClasses(item)">
        @foreach (IGridColumn column in Model.Columns)
        {
            @column.CellRenderer.Render(column, column.GetCell(item))
        }
    </tr>
        }
    }
}
@helper RenderGridHeader()
{
    <tr>
        @foreach (IGridColumn column in Model.Columns)
        {
            @column.HeaderRenderer.Render(column)
        }
    </tr>
}
@helper RenderGridPager()
{
    if (Model.EnablePaging && Model.Pager != null)
    {
    <div class="grid-footer">
        @Html.Partial(Model.Pager.TemplateName, Model.Pager)
    </div>
    }
}
