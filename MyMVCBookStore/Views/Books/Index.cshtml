@model IEnumerable<Dal.BookViewModel>
@using GridMvc.Html
@Styles.Render("~Content/css")
@{
    ViewBag.Title = "Index";
}
<div id='myModal' class='modal fade in'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>
    <hr />
    <div class="row">
        <div class="col-lg-1 col-md-1 col-sm-2 col-xs-4 btn-header">
            @Html.ActionLink("Add Book", "Create", null, new { data_modal = "", id = "btnCrud", @class = "btn btn-small btn-primary pull-Left" })
        </div>
        <div class="col-lg-1 col-md-1 col-sm-2 col-xs-4 btn-header">
            <a href="/Books/Index/" type="button" class="btn btn-default backToList">Back To List</a>
        </div>
        <div class="col-lg-1 col-md-1 col-sm-3 col-xs-4 visible-xs hidden-lg hidden-sm hidden-md btn-header btn-backToList">
            <a href="/Books/Index/" type="button" class="btn btn-default backToList">Back To List</a>
        </div> 
        <div class="col-lg-3 col-md-3 col-sm-5 col-xs-11 btn-search">
            @*<form action="/Books/Search" method="get" class="btnSearch">
                <div class="input-group btnSearch">
                    <input class="form-control btnSearch" id="SearchString" name="SearchString" value="Search your book" placeholder="Search for" required>
                    <span class="input-group-btn btnSearch">
                        <button type="submit" class="btn btn-default btnSearch1"><i class="glyphicon glyphicon-search"></i></button>
                    </span>
                </div>
            </form>*@
            @*<form class="form-search" action="/Books/Search" method="get" >
                <div class="input-append">
                    <input type="text" class="input-medium search-query" id="SearchString" name="SearchString" value="Search your book" placeholder="Search for">
                    <div class="input-group-btn">
                        <button class="btn btn-default" type="submit"><i class="glyphicon glyphicon-search"></i></button>
                    </div>
                </div>
            </form>*@
            <form class="navbar-form" role="search">
                <div class="input-group">
                    <input type="text" class="form-control" placeholder="Search" name="srch-term" id="srch-term">
                    <div class="input-group-btn">
                        <button class="btn btn-default" type="submit"><i class="glyphicon glyphicon-search"></i></button>
                    </div>
                </div>
            </form>
        </div>
        <div  class="col-lg-1 col-md-1 col-sm-3 hidden-xs  btn-header btn-backToList">
            <a href="/Books/Index/" type="button" class="btn btn-default backToList">Back To List</a>
        </div>        
    </div>   
<br />
@Html.Grid(Model).Columns(columns =>
{
    columns.Add().Titled("Book Image")
    .Encoded(false)
    .Sanitized(false)
    .RenderValueAs(d => @<div class="imgClass">
        @{
            if (d.Image != null)
            {
                var base64 = Convert.ToBase64String(d.Image);
                var imgsrc = String.Format((string)"data:image/jpg;base64,{0}", (object)base64);
                <a href="/Books/Details/@d.Id" data-modal=""><img id="imgId" class="img-rounded" src="@imgsrc" style="height: 100px; width: 100px" /></a>;
            }
        }
    </div>
    );
            columns.Add(book => book.Author.FullName).Sortable(true).Titled("Author").Filterable(true);
            columns.Add(book => book.Country.Name).Sortable(true).Titled("Published by").Filterable(true);
            columns.Add(book => book.Title).Sortable(true).Titled("Title").Filterable(true);
            columns.Add(book => book.Price).Sortable(true).Titled("Price").Filterable(true);
            columns.Add(book => book.Description).Titled("Description");
            columns.Add(book => book.PageCount).Sortable(true).Titled("Page").Filterable(true);
            columns.Add(book => book.PublishedDay).Format("{0:dd/MM/yyyy}").Sortable(true).Titled("Published in").Filterable(true);
            columns.Add()
                .Encoded(false)
                .Sanitized(false)
                .RenderValueAs(d => @<div>
                    <a href="/Books/Edit/@d.Id" type="button" class="btn btn-warning btn-circle btn-xl" data-modal=""><i class="glyphicon glyphicon-pencil"></i></a> |
                    <a href="/Books/Delete/@d.Id" type="button" class="btn btn-warning btn-circle btn-xl" del-modal=""><i class="glyphicon glyphicon-remove-circle"></i></a>
                </div>);

}).WithPaging(4)

@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/modalform")
}