@model IEnumerable<Dal.BookViewModel>
@using GridMvc.Html
@*@Styles.Render("~Content/css")*@

@{
    ViewBag.Title = "Index";
}

<div id='myModal' class='modal fade in'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>
    <hr />
    @*<div class="row">
        <div class="col-lg-1 col-md-1 col-sm-2 col-xs-4 btn-header">
            @Html.ActionLink("Add Book", "Create", null, new { data_modal = "", id = "btnCrud", @class = "btn btn-small btn-primary pull-Left" })
        </div>
        <div class="col-lg-1 col-md-1 col-sm-2 col-xs-4 btn-header">
            <a href="/Authors/Create/" type="button" class="btn btn-default">Add Author</a>
        </div>
        <div class="col-lg-1 col-md-1 col-sm-3 col-xs-4 visible-xs hidden-lg hidden-sm hidden-md btn-header btn-backToList">
            <a href="/Books/Index/" type="button" class="btn btn-default backToList">Back To List</a>
        </div> 
        <div class="col-lg-3 col-md-0 col-sm-5 col-xs-11 btn-search">          
            <form class="navbar-form btnSearch" action="/Books/Search" method="get" role="search">
                <div class="input-group">                    
                    <div class="input-group-btn">
                        <input type="text" class="form-control" placeholder="Search" name="searchstring" id="srch-term">
                        <button class="btn btn-default" type="submit"><i class="glyphicon glyphicon-search"></i></button>
                    </div>
                </div>
            </form>
        </div>
        <div  class="col-lg-1 col-md-1 col-sm-3 hidden-xs  btn-header btn-backToList">
            <a href="/Books/Index/" type="button" class="btn btn-default backToList">Back To List</a>
        </div>        
    </div>*@   

<nav class="navbar navbar-default">
    <div class="container-fluid">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="/Books/Index/"><span class="glyphicon glyphicon-list-alt"></span></a>
        </div>
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
            <div class="nav navbar-nav">
                <a href="/Authors/Create/" type="button" class="btn btn-default navbar-btn">Add Author</a>  
            </div>
            <form class="navbar-form navbar-left" action="/Books/Search" method="get" role="search">
                <div class="form-group">
                    <input type="text" class="form-control" name="searchstring" placeholder="Search">
                </div>
                <button type="submit" class="btn btn-default">Search</button>
            </form>            
            <div class="nav navbar-nav navbar-right">
                <a href="/Books/Create/" type="button" data-modal class="btn btn-default navbar-btn">Add Author</a>
            </div>
        </div>
    </div>
</nav>

<br />
@Html.Grid(Model).Columns(columns =>
{
    columns.Add().Titled("Book Image")
    .Encoded(false)
    .Sanitized(false)
    .RenderValueAs(d => @<div class="imgClass">
        @{
            if (d.Image != null)
            {
                var base64 = Convert.ToBase64String(d.Image);
                var imgsrc = String.Format((string)"data:image/jpg;base64,{0}", (object)base64);
                <a href="/Books/Details/@d.Id" data-modal=""><img id="imgId" class="img-rounded" src="@imgsrc" style="height: 100px; width: 100px" /></a>;
            }
        }
    </div>
    );
            columns.Add(book => book.Author.FullName).Sortable(true).Titled("Author").Filterable(true);
            columns.Add(book => book.Country.Name).Sortable(true).Titled("Published by").Filterable(true);
            columns.Add(book => book.Title).Sortable(true).Titled("Title").Filterable(true);
            columns.Add(book => book.Price).Sortable(true).Titled("Price").Filterable(true);
            columns.Add(book => book.Description).Titled("Description");
            columns.Add(book => book.PageCount).Sortable(true).Titled("Page").Filterable(true);
            columns.Add(book => book.PublishedDay).Format("{0:dd/MM/yyyy}").Sortable(true).Titled("Published in").Filterable(true);
            columns.Add()
                .Encoded(false)
                .Sanitized(false)
                .RenderValueAs(d => @<div>
                    <a href="/Books/Edit/@d.Id" type="button" class="btn btn-circle btn-xl btn_color" data-modal=""><i class="glyphicon glyphicon-pencil"></i></a>
                    <a href="/Books/Delete/@d.Id" type="button" class="btn btn-circle btn-xl btn_color" del-modal=""><i class="glyphicon glyphicon-remove-circle"></i></a>
                </div>);

}).WithPaging(4)

@section Scripts {
    @*@Scripts.Render("~/bundles/jquery")*@
    @*@Scripts.Render("~/bundles/bootstrap")*@
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/modalform")
}