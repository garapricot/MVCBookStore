@model IEnumerable<DAL.ViewModel.BookViewModel>
@using System.Activities.Statements
@using GridMvc.Html
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<link href="@Url.Content("~/Content/Gridmvc.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/gridmvc.min.js")" type="text/javascript"> </script>
<script src="~/Scripts/bootstrap.min.js"></script>
<link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Book";
}

<h2>Book</h2>
@Html.AntiForgeryToken()
<p>
    @Html.ActionLink("Create New", "Create")


    @using (Html.BeginForm("Index", "Books/Search", FormMethod.Get))
    {
        @Html.TextBox("SearchString")
        <input type="submit" value="Search" />
    }

</p>
<p>All Books</p>

@Html.Grid(Model).Columns(columns =>
{

    columns.Add(book => book.Id).Titled("N").Sortable(true);
    columns.Add(book => book.Author.FullName).Sortable(true).Titled("Author").Filterable(true);
    columns.Add(book => book.Country.Name).Sortable(true).Titled("Published Country").Filterable(true);
    columns.Add(book => book.Title).Sortable(true).Titled("Book Title").Filterable(true);
    columns.Add(book => book.Price).Sortable(true).Titled("Price").Filterable(true);
    columns.Add(book => book.Description).Titled("Description");
    columns.Add(book => book.PageCount).Sortable(true).Titled("Page Count").Filterable(true);
    columns.Add(book => book.PublishedDay).Format("{0:dd/MM/yyyy}").Sortable(true).Titled("Published Day").Filterable(true);
    columns.Add().Titled("Book Image")
    .Encoded(false)
    .Sanitized(false)
    .RenderValueAs(d => @<div>
        @{
            if (d.Image != null)
            {
                var base64 = Convert.ToBase64String(d.Image);
                var imgsrc = String.Format((string)"data:image/jpg;base64,{0}", (object)base64);
                <img src="@imgsrc" style="max-height: 100px; max-width: 100px" />;
            }
        }
    </div>
    );
    columns.Add()
        .Encoded(false)
        .Sanitized(false)
        .RenderValueAs(d => @<b>
            @Html.ActionLink("Details", "Details", new { id = d.Id })
        </b>);
    columns.Add()
        .Encoded(false)
        .Sanitized(false)
        .RenderValueAs(d => @<b>
            @Html.ActionLink("Edit", "Edit", new { id = d.Id })
        </b>);
    columns.Add()
        .Encoded(false)
        .Sanitized(false)
        .RenderValueAs(d => @<div class="delete-section">
                                 <a class="glyphicon glyphicon-remove vle"  href="@Url.Action("Delete", new {id = d.Id})"></a>
                                 <div class="btn btn-primary delete-confirm" style="display:none" data-delete-id="@d.Id">Confirm Delete</div>
        </div>);
}).WithPaging(4)
@section scripts{
    <script type="text/javascript">
    $(function () {
        $("a.vle").click(function () {
            var deleteLink = $(this);
            deleteLink.hide();
            var confirmButton = deleteLink.siblings(".delete-confirm");
            confirmButton.show();

            var cancelDelete =  function () {
                removeEvents();
                showDeleteLink();
            };

            var deleteItem = function () {
                removeEvents();
                confirmButton.hide();
                $.post(
                    '@Url.Action("Delete")',
                    AddAntiForgeryToken({ id: confirmButton.attr('data-delete-id') }))
                   .done(function () {
                       var parentRow = deleteLink.parents("tr:first");
                       parentRow.fadeOut('fast', function () {
                           parentRow.remove();
                       });
                   }).fail(function (data) {
                       alert("error");
                   });
                return false;
            };

            var removeEvents = function () {
                confirmButton.off("click", deleteItem);
                $(document).on("click", cancelDelete);
                $(document).off("keypress", onKeyPress);
            };

            var showDeleteLink = function () {
                confirmButton.hide();
                deleteLink.show();
            };

            var onKeyPress = function (e) {
                //Cancel if escape key pressed
                if (e.which == 27) {
                    cancelDelete();
                }
            };

            confirmButton.on("click", deleteItem);
            $(document).on("click", cancelDelete);
            $(document).on("keypress", onKeyPress);

            return false;
        });

        AddAntiForgeryToken = function (data) {
            data.__RequestVerificationToken = $('input[name=__RequestVerificationToken]').val();
            return data;
        };
    });
    </script>
}