@model IEnumerable<Dal.BookViewModel>
@using GridMvc.Html
<link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
<link rel="stylesheet" href="https://cdn.datatables.net/1.10.12/css/dataTables.bootstrap.min.css">
<link rel="stylesheet" href="https://cdn.datatables.net/responsive/2.1.0/css/responsive.bootstrap.min.css">
<link href="~/Content/Book/index.css" rel="stylesheet" />
@Scripts.Render("~/bundles/modernizr")
@{
    ViewBag.Title = "Index";
}

<div id='myModal' class='modal fade in'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>
<br />
<br />
<nav class="navbar navbar-default nav_bg_color">
    <div class="container-fluid">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="/Books/Index/"><span class="glyphicon glyphicon-list-alt"></span></a>
        </div>
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
            <div class="nav navbar-nav">

                @if (User.Identity.IsAuthenticated)
                {
                    <a href="/Authors/Create/" type="button" class="btn btn-default navbar-btn">Add Author</a>
                }
            </div>
            <div class="nav navbar-nav">

                @if (User.Identity.IsAuthenticated)
                {
                    <a href="/Attributes/Create/" type="button" class="btn btn-default navbar-btn" style="margin-left: 3px">Add Attribute</a>
                }
            </div>
            <form class="navbar-form navbar-left" action="/Books/Search" method="get" role="search">
                <div class="form-group">
                    <input type="text" class="form-control" name="searchstring" placeholder="Search">
                </div>
                <button type="submit" class="btn btn-default">Search</button>
            </form>
            <div class="nav navbar-nav navbar-right">
                @if (User.Identity.IsAuthenticated)
                {
                    <a href="/Books/Create/" type="button" data-modal="" class="btn btn-default navbar-btn">Add Book</a>
                }
                
            </div>
        </div>
    </div>
</nav>

@Html.Grid(Model).Columns(columns =>
{
    columns.Add().Titled("Book Image")
    .Encoded(false)
    .Sanitized(false)
    .RenderValueAs(d => @<div class="imgClass">
        @{
            if (d.Image != null)
            {
                var base64 = Convert.ToBase64String(d.Image);
                var imgsrc = String.Format((string)"data:image/jpg;base64,{0}", (object)base64);
                <a href="/Books/Details/@d.Id" data-modal=""><img id="imgId" class="img-rounded" src="@imgsrc" style="max-height: 100px; max-width: 100px" /></a>
                ;
            }
            else
            {
                <a href="/Books/Details/@d.Id" data-modal=""><img id="imgId" class="img-rounded" src="/Resource/no-image.png" style="max-height: 100px; max-width: 100px" /></a>
            }
        }
    </div>
    );
            columns.Add(book => book.Author.FullName).Sortable(true).Titled("Author").Filterable(true);
            columns.Add(book => book.Country.Name).Sortable(true).Titled("Published by").Filterable(true);
            columns.Add(book => book.Title).Sortable(true).Titled("Title").Filterable(true);
            columns.Add(book => book.Price).Format("{0:C}").Sortable(true).Titled("Price").Filterable(true);
            columns.Add(book => book.PageCount).Sortable(true).Titled("Page").Filterable(true);
            var txt = "";

            foreach (var book in Model)
            {
                foreach (var attr in book.Attribute.Where(a => a.BookID == book.Id))
                {
                    txt += attr.Value + "\r\n";
                }
            }

            columns.Add(m=>m.Attribute).RenderValueAs(x => txt);
            if (User.Identity.IsAuthenticated)
            {
                columns.Add()
                                               .Encoded(false)
                                               .Sanitized(false)
                                               .RenderValueAs(d => @<div>
                                                <a href="/Books/Edit/@d.Id" data-modal="" type="button" class="btn btn-circle btn-xl btn_color"><i class="glyphicon glyphicon-pencil"></i></a>
                                                <a href="/Books/Delete/@d.Id" del-modal="" type="button" class="btn btn-circle btn-xl btn_color"><i class="glyphicon glyphicon-remove-circle"></i></a>
                                            </div>);
    }


}).WithPaging(5)

@section Scripts {
    @Scripts.Render("~/bundles/modalform")
    @Scripts.Render("~/bundles/responsivetable")
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://cdn.datatables.net/1.10.12/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.12/js/dataTables.bootstrap.min.js"></script>
    <script src="https://cdn.datatables.net/responsive/2.1.0/js/dataTables.responsive.min.js"></script>
    <script src="https://cdn.datatables.net/responsive/2.1.0/js/responsive.bootstrap.min.js"></script>
    <script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
}